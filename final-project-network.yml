Description: >
    Project for Section 2
Parameters:
  # Paramenters are entirely optional.
  # but using them will make your cloudformation templates more reusable
  # use them for things that may change over time, such as instance type,
  # VPCs and so on.
    # This will be the environment for the entire project
    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String
    # This is the VPC that we will be using for the project
    VpcCIDR: 
        Description: Please enter the IP range (CIDR notation) for this VPC
        Type: String
        Default: 10.0.0.0/16
Resources:
    # This will be the single VPC for the entire project
    VPC: 
        Type: AWS::EC2::VPC
        Properties:
            CidrBlock: !Ref VpcCIDR
            EnableDnsHostnames: true
            Tags: 
                - Key: Name 
                  Value: !Ref EnvironmentName










    # instace profile contains the IAM Role name(s) that we want to associate to our auto scaling EC2 Servers
    # never give too much permissions to your EC2 instances! if they get hacked, the permissions get hacked also!
    # in this example, I create a Role called UdacityS3ReadOnlyC2 and just give it a policy of S3 Read-Only Access
    # ProfileWithRolesForOurApp:
    #   Type: AWS::IAM::InstanceProfile
    #   Properties: 
    #     Roles:
    #       - UdacityS3ReadOnlyEC2








  # This is also optional.
  # Bonus points for useful outputs!
  # for example, if you create a Load Balancer
  # it's nice to output the URL to it here, so that we don't have to go to the console to get it.
Outputs: 
    VPC: 
        Description: A reference to the created VPC
        Value: !Ref VPC
        Export:
          Name: !Sub ${EnvironmentName}-VPCID

# Sample UserData
# When creating your Launch Configuration, you may need a UserData script
# here's one that you can use for Ubuntu Linux that will:
# Install Apache Web Server, Start it, and create an index.html that will be displayed
# when you visit the IP address of this server with your web browser
#Here it is:
#
#          #!/bin/bash
#          apt-get update -y
#          apt-get install apache2 -y
#          systemctl start apache2.service
#          cd /var/www/html
#          echo "Udacity Demo Web Server Up and Running!" > index.html


# Starter code in the project section of the course
# Parameters:
# # whatever you consider a changing value, put it as a parameter instead of hard-coding it into your script
# Resources:
#   #instace profile contains the IAM Role name(s) that we want to associate to our auto scaling EC2 Servers
#   ProfileWithRolesForOurApp:
#     Type: AWS::IAM::InstanceProfile
#     Properties: 
#       Roles:
#         - UdacityS3ReadOnlyEC2
  
#           #!/bin/bash
#           apt-get update -y
#           apt-get install unzip awscli -y
#           apt-get install apache2 -y
#           systemctl start apache2.service
#           cd /var/www/html
#           aws s3 cp s3://udacity-demo-1/udacity.zip .
#           unzip -o udacity.zip
#   Outputs: 
#   #Bonus points for useful outputs!
